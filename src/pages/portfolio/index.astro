---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';
import ImageLightbox from '../../components/ImageLightbox.svelte'

const allProjects = await getCollection('portfolio');

// Create a map of categories to an array of projects
const categorizedProjects = allProjects.reduce((acc, project) => {
  const category = project.data.category;
  if (!acc[category]) acc[category] = [];
  acc[category].push(project);
  return acc;
}, {} as Record<string, CollectionEntry<'portfolio'>[]>);
---

<BaseLayout title="portfolio">
  <h1 id="title">portfolio</h1>
  <br />

  {Object.entries(categorizedProjects).map(([category, projects]) => (
    <section class={`category-section category-${category.toLowerCase().replace(/\s+/g, '-')}`}>
      <h2 class="category-title">{category}</h2>
      <div class="project-grid">
        {projects.map((project) => (
          <ImageLightbox
            client:visible
            media={[
              { type: 'image', src: project.data.fullImg },

              // If your frontmatter supports more images:
              ...(project.data.extraImgs || []).map(img => ({ type: 'image', src: img })),

              // If your frontmatter supports a YouTube video:
              ...(project.data.youtube || []).map(link => ({ type: 'video', src: link }))
            ]}
            title={project.data.title}
            desc={project.data.desc}
          >
            <div class="project-card">
              <Image
                src={project.data.thumbImg}
                alt={project.data.title}
                width={250}
                height={250}
                format="avif"
              />
              <h3>{project.data.title}</h3>
            </div>
          </ImageLightbox>
        ))}
      </div>
    </section>
  ))}
</BaseLayout>

<style>
  .project-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
    column-gap: 0.5rem;
    row-gap: 2rem;
  }
  .project-card {
    cursor: pointer;
    text-decoration: none;
    color: inherit;
    display: block;
  }
  .project-card img {
    object-fit: cover;
    transition: filter 0.2s ease-in-out;
    border: 2px solid #1e1e1e;
    border-radius: 8px;
    padding: 5px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
  }
  .project-card:hover img {
    filter: brightness(1.0) contrast(1.2);
  }
  .project-card h2 {
    text-align: center;
    margin-top: 0.5rem;
    font-size: 1.25rem;
  }
</style>
