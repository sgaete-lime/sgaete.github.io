---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';
import ImageLightbox from '../../components/ImageLightbox.svelte'

const allProjects = await getCollection('portfolio');

// Define the order of categories
const categoryOrder = ["games", "modeling", "illustration", "other"];

// Sort projects inside categories using "order" field
function sortProjects(a: CollectionEntry<'portfolio'>, b: CollectionEntry<'portfolio'>) {
  return (a.data.order ?? 9999) - (b.data.order ?? 9999);
}

// Create a map of categories to an array of projects
const categorizedProjects = allProjects.reduce((acc, project) => {
  const category = project.data.category;
  if (!acc[category]) acc[category] = [];
  acc[category].push(project);
  return acc;
}, {} as Record<string, CollectionEntry<'portfolio'>[]>);

// Sort projects inside each category
for (const category in categorizedProjects) {
  categorizedProjects[category].sort(sortProjects);
}
---

<BaseLayout title="portfolio">
  <h1 id="title">art portfolio</h1>
  <h3><br></h3>

{categoryOrder.map((category) =>
  categorizedProjects[category] && (
    <section class={`category-section category-${category.toLowerCase().replace(/\s+/g, '-')}`}>
      <h1 class="category-title">{category}</h1>
      <div class="project-grid">
        {categorizedProjects[category].map((project) => (
          <ImageLightbox
            client:visible
            media={[
              { type: 'image', src: project.data.fullImg.src },
              ...(project.data.extraImgs || []).map(img => ({
                type: 'image',
                src: typeof img === 'string' ? img : img.src, // handle extraImgs being image() objects
              })),
              ...(project.data.youtube || []).map(link => ({ type: 'video', src: link }))
            ]}
            title={project.data.title}
            desc={project.data.desc}
          >
            <div class="project-card">
              <Image
                src={project.data.thumbImg}
                alt={project.data.title}
                width={1000}
                height={1000}
                format="avif"
                class="thumb"
              />
              {category === 'games' && <h3>{project.data.title}</h3>}
            </div>
          </ImageLightbox>
        ))}
      </div>
    </section>
  )
)}
</BaseLayout>

<style>
  .thumb {
    max-width: 250px;   /* constrain displayed size */
  max-height: 250px;
  }
  .project-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
    column-gap: 0.5rem;
    row-gap: 2rem;
  }
  .project-card {
    cursor: pointer;
    text-decoration: none;
    color: inherit;
    display: block;
  }
  .project-card img {
    object-fit: cover;
    transition: filter 0.2s ease-in-out;
    transition: background-color 0.2s ease-in-out;
    border: 2px solid #1e1e1e;
    border-radius: 8px;
    padding: 5px;
    background-color:none;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
  }
  .project-card:hover img {
    transition: background-color 0.2s ease-in-out;
    background-color:#75da5b;
    filter: brightness(1.0) contrast(1.0);
  }
  .project-card h3 {
    text-align: center;
    margin-top: 0.5rem;
    font-size: 1.25rem;
  }

  .category-illustration .project-grid {
    row-gap:0rem;
  }
  .category-modeling .project-grid {
    row-gap:0rem;
  }
</style>
